{"ast":null,"code":"// import loginModal from \"../views/LoginView.vue\";\n// import registerModal from \"../views/RegisterView.vue\";\n// import logoutModal from \"../views/LogoutView.vue\";\n// import { mapGetters, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"NavigationComponent\",\n  data() {\n    return {\n      brewer: false,\n      manager: false,\n      checkbox: false,\n      view: {\n        topOfPage: true\n      }\n    };\n  },\n  beforeMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  },\n  // computed: {\n  //   ...mapGetters(\"userModule\", [\n  //     \"isAuthenticated\",\n  //     \"isBrewer\",\n  //     \"isManager\",\n  //     \"GET_REGISTER_MODAL\",\n  //     \"GET_LOGIN_MODAL\",\n  //     \"GET_LOGOUT_MODAL\",\n  //     \"GET_USER_ID\",\n  //   ]),\n  //   getCurrentRoute() {\n  //     return this.$route.path;\n  //   },\n  //   navBarColor() {\n  //     if (this.$route.path.match(\"/beers/\")) {\n  //       return \"#353631\";\n  //     } else if (this.$route.path.match(\"/breweries/brewer\")) {\n  //       return \"#353631\";\n  //     } else if (this.$route.path.match(\"/userpage\")) {\n  //       return \"#353631\";\n  //     } else {\n  //       return \"\";\n  //     }\n  //   },\n  // },\n  // watch: {\n  //   isBrewer: {\n  //     deep: true,\n  //     handler() {\n  //       this.brewer = this.isBrewer;\n  //     },\n  //   },\n  //   isManager: {\n  //     deep: true,\n  //     handler() {\n  //       this.manager = this.isManager;\n  //     },\n  //   },\n  // },\n  methods: {\n    handleScroll() {\n      if (window.scrollY > 100) {\n        if (this.view.topOfPage) this.view.topOfPage = false;\n      } else {\n        if (!this.view.topOfPage) this.view.topOfPage = true;\n      }\n    },\n    resetToggle() {\n      const menu = document.getElementById(\"main\");\n      menu.classList.remove(\"toggled-true\");\n      this.checkbox = true;\n      this.toggleMenu();\n    },\n    toggleMenu() {\n      this.checkbox = !this.checkbox;\n      const toggleMenu = document.getElementById(\"toggleMenu\");\n      const menu = document.getElementById(\"main\");\n      toggleMenu.checked = this.checkbox;\n      toggleMenu.addEventListener(\"change\", function () {\n        if (toggleMenu.checked) {\n          menu.classList.add(\"toggled-true\");\n        } else {\n          menu.classList.remove(\"toggled-true\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","brewer","manager","checkbox","view","topOfPage","beforeMount","window","addEventListener","handleScroll","methods","scrollY","resetToggle","menu","document","getElementById","classList","remove","toggleMenu","checked","add"],"sources":["src/components/NavBar.vue"],"sourcesContent":["<template>\r\n  <nav\r\n    id=\"main\"\r\n    class=\"navigation-menu navigation-container\"\r\n    :style=\"{ backgroundColor: navBarColor }\"\r\n    :class=\"{ onScroll: !view.topOfPage }\"\r\n  >\r\n    <div>\r\n    Bram\r\n    </div>\r\n\r\n    <input type=\"checkbox\" id=\"toggleMenu\" @click=\"toggleMenu\" />\r\n    <label for=\"toggleMenu\"><i class=\"fa fa-bars\" id=\"toggleIcon\"></i></label>\r\n    <section class=\"main-menu\">\r\n      <ul class=\"navigation-menu__labels\">\r\n        <li>\r\n          <router-link @click=\"resetToggle()\" v-bind:to=\"{ name: 'Home' }\">\r\n            HOME\r\n          </router-link>\r\n        </li>\r\n        <li>\r\n          <router-link\r\n            @click=\"resetToggle()\"\r\n            v-bind:to=\"{ name: 'Portfolio' }\"\r\n          >\r\n            PORTFOLIO\r\n          </router-link>\r\n        </li>\r\n        <li>\r\n          <router-link\r\n            @click=\"resetToggle()\"\r\n            v-bind:to=\"{ name: 'CV' }\"\r\n          >\r\n            ABOUT\r\n          </router-link>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\n// import loginModal from \"../views/LoginView.vue\";\r\n// import registerModal from \"../views/RegisterView.vue\";\r\n// import logoutModal from \"../views/LogoutView.vue\";\r\n// import { mapGetters, mapMutations } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"NavigationComponent\",\r\n  data() {\r\n    return {\r\n      brewer: false,\r\n      manager: false,\r\n      checkbox: false,\r\n      view: {\r\n        topOfPage: true,\r\n      },\r\n    };\r\n  },\r\n  beforeMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  },\r\n  // computed: {\r\n  //   ...mapGetters(\"userModule\", [\r\n  //     \"isAuthenticated\",\r\n  //     \"isBrewer\",\r\n  //     \"isManager\",\r\n  //     \"GET_REGISTER_MODAL\",\r\n  //     \"GET_LOGIN_MODAL\",\r\n  //     \"GET_LOGOUT_MODAL\",\r\n  //     \"GET_USER_ID\",\r\n  //   ]),\r\n  //   getCurrentRoute() {\r\n  //     return this.$route.path;\r\n  //   },\r\n  //   navBarColor() {\r\n  //     if (this.$route.path.match(\"/beers/\")) {\r\n  //       return \"#353631\";\r\n  //     } else if (this.$route.path.match(\"/breweries/brewer\")) {\r\n  //       return \"#353631\";\r\n  //     } else if (this.$route.path.match(\"/userpage\")) {\r\n  //       return \"#353631\";\r\n  //     } else {\r\n  //       return \"\";\r\n  //     }\r\n  //   },\r\n  // },\r\n  // watch: {\r\n  //   isBrewer: {\r\n  //     deep: true,\r\n  //     handler() {\r\n  //       this.brewer = this.isBrewer;\r\n  //     },\r\n  //   },\r\n  //   isManager: {\r\n  //     deep: true,\r\n  //     handler() {\r\n  //       this.manager = this.isManager;\r\n  //     },\r\n  //   },\r\n  // },\r\n  methods: {\r\n       handleScroll() {\r\n      if (window.scrollY > 100) {\r\n        if (this.view.topOfPage) this.view.topOfPage = false;\r\n      } else {\r\n        if (!this.view.topOfPage) this.view.topOfPage = true;\r\n      }\r\n    },\r\n    resetToggle() {\r\n      const menu = document.getElementById(\"main\");\r\n      menu.classList.remove(\"toggled-true\");\r\n      this.checkbox = true;\r\n      this.toggleMenu();\r\n    },\r\n    toggleMenu() {\r\n      this.checkbox = !this.checkbox;\r\n\r\n      const toggleMenu = document.getElementById(\"toggleMenu\");\r\n      const menu = document.getElementById(\"main\");\r\n\r\n      toggleMenu.checked = this.checkbox;\r\n\r\n      toggleMenu.addEventListener(\"change\", function () {\r\n        if (toggleMenu.checked) {\r\n          menu.classList.add(\"toggled-true\");\r\n        } else {\r\n          menu.classList.remove(\"toggled-true\");\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #fdfefe;\r\n  font-family: \"Cambria\";\r\n  font-size: 18px;\r\n}\r\n\r\n.navigation-container {\r\n  max-width: 100%;\r\n  margin: 0;\r\n  padding: 50px;\r\n  z-index: 1;\r\n  width: 100%;\r\n  position:fixed;\r\n}\r\n\r\n.navigation-menu {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: transparent;\r\n  padding-block: 15px;\r\n}\r\nimg {\r\n  height: 60px;\r\n  padding-right: 30px;\r\n}\r\n.toggled-true {\r\n  background-color: rgba(0, 0, 0, 0.548);\r\n}\r\n.onScroll {\r\n  background: black;\r\n}\r\n.navigation-menu a {\r\n  text-decoration: none;\r\n  color: #fdfefe;\r\n}\r\n.navigation-menu button {\r\n  text-decoration: none;\r\n  color: #fdfefe;\r\n  border: none;\r\n  background-color: transparent;\r\n}\r\n\r\n.site-identity-logo {\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n}\r\n.site-identity-logo:hover {\r\n  color: #f14f29;\r\n}\r\n\r\n.navigation-menu__labels {\r\n  list-style: none;\r\n  display: flex;\r\n  gap: 25px;\r\n  align-items: flex-end;\r\n}\r\n\r\n.navigation-menu__labels > li > a:hover {\r\n  color: #f14f29;\r\n}\r\n.navigation-menu__labels > li > button:hover {\r\n  color: #f14f29;\r\n}\r\n\r\n#toggleMenu,\r\n.navigation-menu label {\r\n  display: none;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .main-menu {\r\n    width: 100%;\r\n    max-height: 0;\r\n    overflow: hidden;\r\n    opacity: 1;\r\n  }\r\n  .navigation-container{\r\n  position:relative;\r\n  background-color: #353631;\r\n  }\r\n  .navigation-menu label {\r\n    display: inline-flex;\r\n    align-items: flex-start;\r\n    cursor: pointer;\r\n    color: #fdfefe;\r\n  }\r\n\r\n  .navigation-menu__labels {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    margin-top: 10px;\r\n    padding: 20px;\r\n  }\r\n\r\n  #toggleMenu:checked ~ .main-menu {\r\n    max-height: 75%;\r\n  }\r\n}\r\n</style>"],"mappings":"AA0CA;AACA;AACA;AACA;;AAEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,OAAA;MACAC,QAAA;MACAC,IAAA;QACAC,SAAA;MACA;IACA;EACA;EACAC,YAAA;IACAC,MAAA,CAAAC,gBAAA,gBAAAC,YAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,OAAA;IACAD,aAAA;MACA,IAAAF,MAAA,CAAAI,OAAA;QACA,SAAAP,IAAA,CAAAC,SAAA,OAAAD,IAAA,CAAAC,SAAA;MACA;QACA,UAAAD,IAAA,CAAAC,SAAA,OAAAD,IAAA,CAAAC,SAAA;MACA;IACA;IACAO,YAAA;MACA,MAAAC,IAAA,GAAAC,QAAA,CAAAC,cAAA;MACAF,IAAA,CAAAG,SAAA,CAAAC,MAAA;MACA,KAAAd,QAAA;MACA,KAAAe,UAAA;IACA;IACAA,WAAA;MACA,KAAAf,QAAA,SAAAA,QAAA;MAEA,MAAAe,UAAA,GAAAJ,QAAA,CAAAC,cAAA;MACA,MAAAF,IAAA,GAAAC,QAAA,CAAAC,cAAA;MAEAG,UAAA,CAAAC,OAAA,QAAAhB,QAAA;MAEAe,UAAA,CAAAV,gBAAA;QACA,IAAAU,UAAA,CAAAC,OAAA;UACAN,IAAA,CAAAG,SAAA,CAAAI,GAAA;QACA;UACAP,IAAA,CAAAG,SAAA,CAAAC,MAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}