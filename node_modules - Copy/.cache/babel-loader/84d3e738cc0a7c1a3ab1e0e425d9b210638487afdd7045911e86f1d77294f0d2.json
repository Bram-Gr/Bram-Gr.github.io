{"ast":null,"code":"export default {\n  data() {\n    return {\n      view: {\n        topOfPage: true,\n        checkbox: false\n      }\n    };\n  },\n  beforeMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  },\n  methods: {\n    handleScroll() {\n      if (window.scrollY > 100) {\n        if (this.view.topOfPage) this.view.topOfPage = false;\n      } else {\n        if (!this.view.topOfPage) this.view.topOfPage = true;\n      }\n    },\n    resetToggle() {\n      const menu = document.getElementById(\"main\");\n      menu.classList.remove(\"toggled-true\");\n      this.checkbox = true;\n      this.toggleMenu();\n    },\n    toggleMenu() {\n      this.checkbox = !this.checkbox;\n      const toggleMenu = document.getElementById(\"toggleMenu\");\n      const menu = document.getElementById(\"main\");\n      toggleMenu.checked = this.checkbox;\n      toggleMenu.addEventListener(\"change\", function () {\n        if (toggleMenu.checked) {\n          menu.classList.add(\"toggled-true\");\n        } else {\n          menu.classList.remove(\"toggled-true\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","view","topOfPage","checkbox","beforeMount","window","addEventListener","handleScroll","methods","scrollY","resetToggle","menu","document","getElementById","classList","remove","toggleMenu","checked","add"],"sources":["src/components/NavBar.vue"],"sourcesContent":["<template>\r\n  <div class=\"nav-bar\" id=\"main\"\r\n    :class=\"{ onScroll: !view.topOfPage }\">\r\n   <div class=\"name\">Bram Groen</div> \r\n    <nav >\r\n      <input type=\"checkbox\" id=\"toggleMenu\" @click=\"toggleMenu\" />\r\n    <label for=\"toggleMenu\"><i class=\"fa fa-bars\" id=\"toggleIcon\"></i></label>\r\n\r\n      <ul class=\"routes\">\r\n        <li> <router-link class=\"custom\" @click=\"resetToggle()\" v-bind:to=\"{ name: 'Home' }\">\r\n            HOME\r\n          </router-link></li> | \r\n        <li> <router-link class=\"custom\" @click=\"resetToggle()\" v-bind:to=\"{ name: 'Portfolio' }\">\r\n            PORTFOLIO\r\n          </router-link></li> | \r\n        <li> <router-link class=\"custom\" @click=\"resetToggle()\" v-bind:to=\"{ name: 'CV' }\">\r\n            ABOUT\r\n          </router-link></li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\ndata(){\r\nreturn{\r\n  view:{\r\n  topOfPage:true,\r\n  checkbox:false\r\n  }\r\n}\r\n\r\n},\r\n  beforeMount() {\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  },\r\nmethods:{\r\n  handleScroll() {\r\n      if (window.scrollY > 100) {\r\n        if (this.view.topOfPage) this.view.topOfPage = false;\r\n      } else {\r\n        if (!this.view.topOfPage) this.view.topOfPage = true;\r\n      }\r\n    },\r\n    \r\n    resetToggle() {\r\n      const menu = document.getElementById(\"main\");\r\n      menu.classList.remove(\"toggled-true\");\r\n      this.checkbox = true;\r\n      this.toggleMenu();\r\n    },\r\n    toggleMenu() {\r\n      this.checkbox = !this.checkbox;\r\n\r\n      const toggleMenu = document.getElementById(\"toggleMenu\");\r\n      const menu = document.getElementById(\"main\");\r\n\r\n      toggleMenu.checked = this.checkbox;\r\n\r\n      toggleMenu.addEventListener(\"change\", function () {\r\n        if (toggleMenu.checked) {\r\n          menu.classList.add(\"toggled-true\");\r\n        } else {\r\n          menu.classList.remove(\"toggled-true\");\r\n        }\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@media screen and (min-width: 300px) {\r\n\r\n  li, .name {\r\n  font-family: 'Oswald', sans-serif;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  color: white;\r\n  padding: 0 20px 0 0;\r\n  margin-left: 20px;\r\n  list-style: none;\r\n}\r\n#toggleMenu\r\n  #toggleMenu, i{\r\n    display:flex;\r\n    position: absolute;\r\n    top:.5rem;\r\n    right:1rem;\r\n\r\n  }\r\n .nav-bar{\r\n  background: rgb(71, 70, 70);\r\n  display:flex; \r\n  justify-content: stretch;\r\n  position:fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  height: 4rem;\r\n \r\n }\r\n .toggled-true {\r\n  background-color: rgba(0, 0, 0, 0.548);\r\n}\r\n ul{\r\n  text-decoration: none;\r\n  list-style: none;\r\n }\r\n\r\n\r\n}\r\n@media screen and (min-width: 770px) {\r\n\r\n.nav-bar {\r\n  background:transparent;\r\n  display: flex;\r\n  padding: 10px; /* Adjust the padding as needed */\r\n  margin-top: 0px; /* Reset margin-top to remove the gap */\r\n  width: 100%;\r\n  height: 60px;\r\n justify-content: stretch;  \r\n}\r\n.onScroll{\r\n  background: rgb(71, 70, 70);\r\n  color: #707070;\r\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\r\n}\r\nul {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n  display: flex;\r\n  flex-grow: 4;\r\n  justify-content: flex-end;\r\n\r\n}\r\n\r\nnav {\r\n  display: flex;\r\n  flex-grow: 1;\r\n}\r\n\r\n\r\n\r\n.custom, .name {\r\n  text-decoration: none; /* Remove underline */\r\n  color: #707070; /* Custom link color */\r\n  padding: 8px 12px; /* Add padding as you wish */\r\n}\r\n\r\n/* Apply the desired styles for the custom-link class */\r\n.custom:hover {\r\n  color: #fff; /* Change the color on hover */\r\n  /* background-color: rgb(17, 71, 38); Change the background color on hover */\r\n}\r\n#toggleMenu,i {\r\n  display: none;\r\n}\r\n}\r\n</style>\r\n"],"mappings":"AAwBA;EACAA,KAAA;IACA;MACAC,IAAA;QACAC,SAAA;QACAC,QAAA;MACA;IACA;EAEA;EACAC,YAAA;IACAC,MAAA,CAAAC,gBAAA,gBAAAC,YAAA;EACA;EACAC,OAAA;IACAD,aAAA;MACA,IAAAF,MAAA,CAAAI,OAAA;QACA,SAAAR,IAAA,CAAAC,SAAA,OAAAD,IAAA,CAAAC,SAAA;MACA;QACA,UAAAD,IAAA,CAAAC,SAAA,OAAAD,IAAA,CAAAC,SAAA;MACA;IACA;IAEAQ,YAAA;MACA,MAAAC,IAAA,GAAAC,QAAA,CAAAC,cAAA;MACAF,IAAA,CAAAG,SAAA,CAAAC,MAAA;MACA,KAAAZ,QAAA;MACA,KAAAa,UAAA;IACA;IACAA,WAAA;MACA,KAAAb,QAAA,SAAAA,QAAA;MAEA,MAAAa,UAAA,GAAAJ,QAAA,CAAAC,cAAA;MACA,MAAAF,IAAA,GAAAC,QAAA,CAAAC,cAAA;MAEAG,UAAA,CAAAC,OAAA,QAAAd,QAAA;MAEAa,UAAA,CAAAV,gBAAA;QACA,IAAAU,UAAA,CAAAC,OAAA;UACAN,IAAA,CAAAG,SAAA,CAAAI,GAAA;QACA;UACAP,IAAA,CAAAG,SAAA,CAAAC,MAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}